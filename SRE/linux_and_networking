
Linux is an open source operating system and uses linux kernel.
Kernel is core of os and is the layer between OS and hardware.
Being open source, the code can be modified. This lead to various distributions
    ubuntu, redhat, debian, kali linux etc.

Package Manager:
    To install and uninstall a package each distribution has its own package manager.
    Python can be installed using
    > sudo apt install python3
    > sudo apt uninstall python3 # to uninstall.
    For red-hat we have yum install.

File system:
    /    #root dir
    /bin  # binaries
    /boot  # boot files
    /dev    # device files
    /etc   # configuration files
    /home  # home dir of users.
    /tmp    # temporary files.
    /var    # variables. contains logs and data files.

Permissions:
    --- --- ---
    rwx rwx rwx
    user gr  other

    > chmod 777 abc.txt # gives rwx to all 3.
    > chmod 700 abc.txt # changes to rwx for only user.
    # 4= read, 2=write, 1=execute
    By default when file is created it will have 644(rw , r, r) permissions.
    There is no concept of nested groups.
    Users can be added to groups. we can set permission to a group as well as individual users.

    >sudo useradd -m user1 # adds a user
    > sudo su user1(become user1)
    > sudo useradd -g group1 user1 # create user1 and add them to group group1
    > cat /etc/passwd  # user and group info is found here.
    > cat /etc/group   # print groups.
    > usermod # modify user
    > userdel # delete user

Access Control lists:
    >getfacl <filename># get access control list # gives owner, group and user,group,other information.
    >setfacl -m u::rwx <filename># set access control list for file, -m for modify.

    example:
    >setfacl -m u:tempuser:rwx <filename> # sets tempuser(already existed) and user to rwx
    > ls -la # this will have + to the permissions since permissions are modified.
             # 1 way to check if acl is applied.
    > chmod 770 filename # user will have edit permission but others dont have.
    > sudo su tempuser
    > vi filename # edit the file. it works
    > exit

    >useradd tempotheruser # create another user.
    > sudo su tempotheruser
    > cat filename # edit will not work as tempuser only has permission.
    > exit

    Give least privilege to the user.

su vs sudo :
    sudo : Gives the powered privileges.. to download somethings.
        eg: sudo apt get install
    su : to impersonate someone.
        eg: su testuser # enter into testuser mode.


CPU:
    Common commands:
    >lscpu  # info about architecture(x86), big or little endian, cpus count, vm type, l1, l2, l3 cache etc.
    >top
    >ps   # > ps -aef --forest # like a tree, parent which started the process.
    > ps aux # %cpu , %mem is shown.
    >kill

Memory:
    store data for immediate use.
    Common commands:
    >free
    >vmstat

storage:
    Storage is for long term user as opposed to RAM.
    Storage can be SSD or HDD.
    HDD is cheaper and better for infrequently accessed data.
    commands:
    >df -h
    >du -h

Scripting
    Variables
    Environment variables:
    System wide env variables:
    > vi /etc/environment

    user specific variables:
    >vi ~/.bashrc
    >source ~/.bashrc

    > printenv
    >export VAR1=123 # becomes available for child process.

Regular expressions:
    Characters:
    . = any character
    [az] = a or z
    [a-z] = a through z
    * = 0 or more times
    + = 1 or more times
    {2} = 2 times
    {2,} = 2 or more times
    {1,3} = 1 to 3 times
    \. = for literal .

    Positions:
    ^ = beginging of line
    $ = end of line
    \< = beinging of word
    \> = end of word

    Flags:
    grep -i = case insensitive
    grep -n = line number
    group -o = only matching
    grep -c = number of occurrences

sed: sed is used for replacing strings.

awk: Also for parsing and perform logic on string data.

Question. If many files are present out of which 2 are abc.csv and abc1.csv. get only 2 files
        > ls -la | grep -E abc.*\.csv
        .* = . is present 0 or more times.
        \. = literal .
        -E = regular expression parse.

When to use shell scripting or python?
    > python has more packages, implement obj programming, can execute if we move program to diff server.


Networking:
    > curl website.org
    > nc -vz website.org 443(check ports)
    > netstat -tulpn
    > ping
    > dig, nslookup # DNS

ip = 192.0.10.43/28 = 192.0.10.43/255.255.255.240
                    = starting ip is 192.0.10.32 # network ip
                    = ending ip is 192.0.10.32 # broadcast ip
                    = 192.0.10.33 - 192.0.10.46 # Check to calculate using formula.

For autoscaling purpose, we need to keep enough IPs in spare to use during scale up.

-In which directory config files are stored? etc
-Application is runnig but slowly. troubleshoot performance? ps -aef(process stuck, wait, etc), top, vmstat.
-Process when you access a website?
    DNS resolution(browser cache, etc/hostfile, ISP server, recursive DNS lookup is launched root -> TLD -> Authoritative name server will return ip).
    HTTP tcp connection
    Http GET request, Webserver, API server, APP server.
    response.

- NAT Gateway is unidirectional as traffic flows from private to public network and not other way around this is for security purposes.
  NAT gateway intercepts requests from client, gives its ip and forward the requests to the server. Once the response is received from server,
  The NAT gateway replaces its ip client's ip and forwards the response to the correct client.

- Website does not work , troubleshoot this?
    -Check for any other website.
    - curl command
        if curl is working but browser is not working, then browser cache issue.
    - ping
    - telnet port 80.


- What are different permissions in linux?
    1) read : read the file and list dir.
    2) write : write to the file and add file to dir.
    3) execute : execute a file and locate anything under dir.

    chmod is used to change permissions.
    > chmod <receiver of permission(user)>+<permission> filename
    > chmod ug+rw testfile.doc
    read, write permission is given to user, group for the file.


- chown vs chmod?
    - chown is used to change the ownership and group owner of the file or directory. we can change the owner of file from 1 to another.

    chown deals with ownership while chmod deals with permissions of files and dirs.
    > chown test2 file.txt # to change the owner of file to test2.
    >chown john:admin directory # changes directory ownership to john and group ownership to admin.


- DNS using TCP
    DNS generally uses UDP, but anytime DNS response exceeds 512 bytes, DNS uses TCP.
    This occurs generally during performing zone transfers(as opposed to normal lookups).
    As we use DNSSEC more and more, encrypted responses often exceed 512 bytes.


- What is LILO?
    LILO = Linux Loader. Its a boot loader that generally loads linux OS into memory and starts execution.
    Once computer starts, BIOS does early tests and transfers control to Master Boot Record.
    LILO allows faster linux boot. config files are located at /etc/lilo.conf.

- what is command 2>/dev/null means?
    2>/dev/null means error messages are redirected to /dev/null.

- tee command?
    tee command is used to redirect the output to the standard output and to files(1 or more).
    > ls | tee lsout.txt
    > ps | tee -a ps_a_.txt # -a appends

- tar with ssh
    > tar -zcvf - /folder/filename | ssh username@ip "cat > dest_filename.tgz"
    password of host will be asked:

- tar with nc
    First run a listener daemon on the target
    > nc -l -p 6000 > mytar.tgz
    > tar -zcvf - /folder/filename | nc hostname@mysameip 6000

    nc is plain text while ssh is encrypted.

- Monitor a log file
    > tail -f -n 20 logfile


- launch multiple desk heavy operations
    > sudo dd if=/dev/xvda1 of=/dev/null bs=1K &
    > watch -n 0.5 'grep -E "procs_running|procs_blocked" /proc/stat; ps r -A'

    /proc/stat contains procs_running and procs_blocked information.
    ps r -A  #  r = display running processes, -A = owned by other users.

- How to search, edit and replace text in linux?
    Edit : Using vi or using any editor we can do.
    search: >find / -name file.txt, we can use 'grep' too.
    replace: >sed -i 's/old_text/new_text/g' file.txt

- Number of chars in file
    > wc -l filename.txt # number of lines
    > wc -w # words
    > wc -c # number of bytes
    > wc -m # number of characters
    > wc -L # print length of longest line.

- Latency vs throughput in tcp?
    TCP_WINDOW_SIZE_in_tcp / latency_in_seconds = bits_per_second_throughput

    TCP_WINDOW_SIZE:
        TCP window size is the amount of data that can be sent to receiver before receiving the ack.
        window_size can be changed to improve the performance.
    Latency:
        Time taken by packet to be send from sender to receiver and get it back.
        depends of distance from sender to receiver, intermediate hops, load. High latency is longer delays.
        latency unit is time, sec, millisec, etc.
    Throughput:
        Amount of data that can be transmitted over network connection in given period of time.
        throughput is Bitspersec, MB/sec etc.

    Larger window size, higher throughput.


- Loops in network topologies
    In ethernet networks, Spanning Tree Protocol(STP) is used to avoid loops in network topologies. If loops are present, broadcast storms will form.
    Loops occur when there is more than 1 path between 2 nodes. It occurs generally in bus, star, ring and mesh.
    Broadcast storms occur when broadcast packet is continuously transmitted around the loop.
    In Ip networks, TTL value helps prevent routing loops.

    How STP prevents ?


- Process Management system calls?
    exec(): for a new program execution
    exit(): for exiting the process
    fork(): for creating a new process
    wait(): Waits for the child process execution and retrieve it exit status.
    pid_t wait(int *status);
    returns the process id of child process and stores its exit status in 'status' argument.
    wait() is used with fork().
    There are 2 varients, waitpid() -> allows the caller to wait for specific child process.
                          waitid() -> it has additional parameters like id_type, options etc and more flexible than wait() call.

    System calls to get process IDs:
    getppid() : returns unique id of parent process.
    getpid() : returns the unique process id.

- What is kernel and can we modify it?
    Kernel is the lowest level of software that handles both the user requests and interacts with hardware.
    Linux kernel is free, open-source and as per General Public License(GPL) it becomes legal for anyone to edit.

- cat tmp.txt has below content:
    r1 10.1.1.1 SEA westin
    r1 10.1.1.2 SEA Westin
    r2 10.2.1.1 CHI Cermak
    sw1 10.3.1.1 SEA Westin

    -Count the number of total switches?
    >cat tmp.txt | grep -e "^sw" | wc -l

    -Count the number of total switches in Seattle
    > cat tmp.txt | grep -e "^sw" | grep SEA | wc -l

    -List all the IP addresses?
    > cat tmp.txt | awk '{print$2}'

    - SSH and execute the command “show ntp server” against all devices by DNS name
    >  while read -r line; do ssh $line "show ntp server"; done<tmp.txt | awk '{print $1}'


- How can you quickly copy a file to the following 3 hosts:
  host1.dayjob.com, host2.dayjob.com, host3.dayjob.com

    -using scp
    > scp file user@host1.dayjob.com:/folder/file
    > for host in host1.dayjob.com host2.dayjob.com host3.dayjob.com; do scp ~/my_file $host:my_file; done

- Different HTTP methods?
    GET : GETs the data.
    POST : Creation of resource. The server creates new resource, server assigns new resource URI and then conveys the same to client.
    HEAD :
    PUT : create or complete replacement of resource. Client specifies the resource URI to be created at HTTP server.
          PUT is idempotent meaning sending the same request multiple times will create if does not exist or will update if already exists.
    PATCH: Make partial changes in the resource.
    DELETE: Deletes the resource.
    TRACE
    OPTIONS

- Explain data encapsulation and de-encapsulation in OSI Model.
    Header and trailer are added at each layer on sending side before removing on receiving side.

    Encapsulation: Addition of header and trailer on sender is called Encapsulation.
    de-encapsulation: Removal of header and trailer on receiver is called de-Encapsulation.

    Segment: A transport layer header is added to data coming from application/presentation/session layer is called segment.
    header contains tcp/udp information and port numbers are added here.
    This is sent to next layer called network layer.

    Packet: Network layer receives segment and adds source and destination ip at the header. Header added to segment is called packet.
    Packet is forwarded to data link layer.

    Frame: The header information like source MAC address and destination MAC address are added in this layer.
    error detection and correction are added to the trailer.
    The addition of header and trailer to packet is called frame. It is sent to physical layer.

    Bits: Physical layer receives frames and converts into binary data which is sent on wired or wireless media.

    On the receiver side, the reverse happens. If the MAC, ip is not same as destination mac or ip.
    the data is discarded.


- Given a device’s IP Address (172.15.17.30) and subnet mask (/20), find the Network address.
    172.15.16.0

    Network Address = IP address (Logical AND) subnet mask

- Given: Subnet, a Class C network 206.16.6.0/24 to create 5 smaller subnets.

    We need to create 5 subnets, so we need 3 bits.
    Number of subnets = 2 ^ 3 = 8 subnets can be formed.
    Each subnet will have = 2 ^ (8 -3) = 32 ips.
    Host ips = 32 - 2(network and broadcast) = 30 host ips.

    So we can create 8 subnets will 30 host ips in each subnet.


- Figure out an easy way to increase your login shell's Anonymous memory usage and verify that it has increased.
    > CONTENTS=$(dd if=/dev/urandom bs=1M count=100)
    # dd is data duplicator. It performs Low-level IO operations.
    # if=input file
    #/dev/urandom  is a special file that generates random data.
    #bs = block size = 1M = 1MB
    # count = 100 times.
    > grep -i anon /proc/$$/status

- Enable a 250MB swap space on your hard drive and notice it has 0 bytes Used. Then keep increasing your shell's anon usage in increments as above. After each increment check your free usage and your shell's anonymous usage. Eventually what two things happen? Is this a feature of the shell or the whole host?

    1.Your shell issues a " fork: Cannot allocate memory" error. It's a feature of the shell, not the whole host which you can validate by opening a different shell.
    2. "free -m" shows swap usage

- How do you remedy this ^^^?
    unset CONTENTS1

-  Look at your shell's grep -i VmSwap /proc/$$/status and compare this number with free -m Swap Used. Why are they different?
    1. When Linux decided it to swap, it chose multiple processes, not just yours.
    2. To see the other processes that are in swap:
    > 	for file in /proc/*/status ; do awk '/VmSwap|Name/{printf $2 " " $3}END{ print ""}' $file; done | sort -k 2 -n -r | less

- Where's the rest of the shell's memory (the non-anon part)?
    It's either in the page cache (RSS - anon) or it's on disk (VmSize - RSS)

- Disable your swap space and simulate page thrashing.
    watch -n 1 'grep -Ei "majfault|pgpgin|pgpgout" /proc/vmstat'
    Add large variables until you are within a couple hundred MB of running out of available RAM, then dd if=/dev/urandom of=/dev/shm/out bs=1M
    You will see a spike in majfault, pgpgin, pgpgout just before it runs out of memory


- Describe how the ARP process works.
    In order to forward an ethernet frame, Host A needs to destination address of Host B.
    This is done by ethernet boradcast frame.

    Ethernet frame from Host A:
    Source ip: a.b.c.d(Host A)
    Destionation ip: 255.255.255.255(broadcast ip)
    Msg: Who has 192.168.1.123(host B IP add)

    Host A will forward to Switch Port 1. Switch will forward out to all ports in
    broadcast domain except that is received from. Host B receive broadcasted frame. Host 2 will unicast ARP reply.

    Ethernet frame:
    Source ip: b.b.b.b (Host B)
    Destination : a.a.a.a(Host A)
    Msg: I am 192.168.1.123(Host B ip address.)

- How would an Ethernet frame be forwarded from Host A to Host B?
    When Host A wants to communicate with Host B at layer MAC addresses should be known.
    Ethernet Frame:
    Source address: Host A
    Destination: Host B

    Host A sends frame to port 1 of switch. Switch checks its mac address table to see
    if there is an entry for host B associated with any ports.

    If there is no mapping, switch will flood Ethernet frame out of all ports in broadcast domain
    except the port the frame was received on.

    Switch will update MAC address table when it receives MAC address from Host B.

- Describe how an IP packet would forward from Host A to Host B.
    First Host A needs to determine if Host B is within the network or not.
    By doing Host A & subnet mask , Host B & subnet mask. if both are same. Then Host A and Host B are in same network.
    Host A will ARP for MAC address of Host B to get destination address.

    If Host A and B are not in same network. Host A will use MAC address of default gateway
    for destination mac address.

    Ethernet Frame:
        source address:  Host A mac address
        Destination Address: mac address Router1 port 1

    IP:
        source address: Host A ip address
        destination address: Host B ip address.
        TTL 255.

    Router examines the ethernet headers, see destination MAC is its MAC. Replace its MAC as source MAC.
    Router also examines destination ip and determines the subnet is directly attached to port 2.
    The router will decrement the TTL by 1 and then re encapsulate the ip packet.

    Ethernet:
        Source address: mac address Router1 port 2
        Destination address: Host B mac address.
    IP:
        Source: Host A ip address
        destination: Host B ip address
        TTL: 254.


Determine the maximum IOPS supported by your hard drive without using any third-party tools?
    Writes per second and reads per second must be calculated separately.

    First turn off any services installed on OS. Make "top -d 1" should be 100% cpu idle.

    1) To get writes per second
    > dd if=/dev/urandom of=/tmp/out bs=1M & iostat -mx 1
    check w/s. if 516 w/s. This represents max write IOPS disk can handle.

    2) To get reads per second.
    > df -hl / --> displays filesystem name.

    >sudo dd if=/dev/nvme0n1p1 of=/dev/null bs=1M & iostat -mx 1
    The column r/w represends max number read IOPS supported by device.


- How is throughput affected if you run dd with different block sizes?
    Count is adjusted so as to keep roughly the same amount of data being written each time:
    >time dd if=/dev/urandom of=/tmp/out bs=512 count=50000 conv=fsync

    >time dd if=/dev/urandom of=/tmp/out bs=2K count=12000 conv=fsync

    >time dd if=/dev/urandom of=/tmp/out bs=8K count=3000 conv=fsync

    >time dd if=/dev/urandom of=/tmp/out bs=32K count=750 conv=fsync

    >time dd if=/dev/urandom of=/tmp/out bs=128K count=187 conv=fsync

    >time dd if=/dev/urandom of=/tmp/out bs=256K count=93 conv=fsync

    >time dd if=/dev/urandom of=/tmp/out bs=1M count=25 conv=fsync

- What doesn't Dirty Pages increase if your filesystem is mounted sync?

    If filesystem mounted async, dirty pages increase.
    > sudo nice dd if=/dev/urandom of=/tmp/out bs=512 conv=fsync & watch -n 1 "grep Dirty /proc/meminfo"

    Then remount sync, check it will not increase.
    > sudo mount -o remount,sync /
    > sudo nice dd if=/dev/urandom of=/tmp/out bs=512 conv=fsync & watch -n 1 "grep Dirty /proc/meminfo"

    sync option forces all writes to go immediately to disk instead of accumulating in the page cache.
    Hence dirty pages dont increase.

- How do block I/O and exec_runtime vary with different computational and i/o-bound dd processes?
  34

- How many network packets have been received by your NIC interface since boot?
    Get name of non-loopback NUC interface.
    [ec2-user@ip-172-31-2-66 ~]$ cat /sys/class/net/eth0/statistics/rx_packets
    47786

    This host has received 47786 packets since it was booted.

-  How many packets have overfilled the socket buffers on your host?
    > netstat -s
        tcp:
        0 received packet dropped due to low memory
        0 listen queue overflow
        udp:
	    355960 dropped due to full socket buffers

- Configure Linux as a simple ipv4 router:
    > sudo sysctl -w net.ipv4.ip_forward=1

- "Zombie" process that terminates before the parent process exits is known as.
- "Child process id" is returned on success of fork system call return to the parent process.
- "nohup" command is used to keep a process running even after logout from shell.
- chown command in Linux changes users and/or group ownership of each file.
- Context switching in Linux is process switches from user mode to kernel mode.
- Maximum number of processes in Linux is 32768
- The dmesg command show kernel log messages.
- "script" command is used to record a user login session in a file.
- Find / -name ‘*’ will list all files and folders recursively starting frmo /.
- sed is a command typically used for modify/print contents of file.
- "talk" communication command provides communication to another user logged on by writing to the bottom of their terminal.
- Creation of hard links and soft links that point across partitions is not allowed.
- character and block are types of device files.
- chmod u=rw file, read-write permission to the owner.
- procfs used to change certain kernel parameters at runtime using the sysctl command.
- "mount -r" used to mount the file system read-only.
- "Swap" daemon manages the physical memory by moving processes from physical memory to swap space when more physical memory is needed.
- kill -9 sends KILL signal.
- encrypted password of a user is stored in /etc/shadow.
- "fc" allows you to use the default editor to edit several commands from the history file.
- "export"  command can be used to make variables of the shell to be made available to the sub-shell.
- variables does not require declaration before assigning to them.
- variables are case sensitive.
- To extract the content of variable, $ is used before it.
- "etc/group" file need to be referred for the user's secondary group.
- At kernel bootstrap, /etc/init process is started.
- "ps -fax" to view running processes.
- "fork bomb" is process that recursively opens two children of itself. Nothing happens if the system has configured process number limits.
The process will replicate until CPU is starved.
- rmdir == rm -rf
- "groups" show the groups your active user belongs to.
- class D is multicast IP Addresses range.
- "netstat" to view the open ports on a Linux host.
-
- 0.0.0.0/0 represent all addresses and default route.












































